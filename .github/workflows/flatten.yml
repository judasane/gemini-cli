name: Create Flattened File

on:
  workflow_dispatch:

jobs:
  flatten-and-commit:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate flattened file
        run: |
          OUTPUT_FILE="flattened_output.txt"
          # Add or remove file extensions to exclude
          EXCLUDE_EXTENSIONS="map,tsbuildinfo,log,lock,db,sqlite,sqlite3,dump,lcov,png,jpg,jpeg,gif,ico,zip,gz,pdf,mp4,svg"
          # Add or remove specific filenames to exclude
          EXCLUDE_FILES="package-lock.json,yarn.lock,pnpm-lock.yaml"

          echo "--- FLATTENED REPOSITORY SOURCE ---" > "$OUTPUT_FILE"
          echo "Generated at: $(date)" >> "$OUTPUT_FILE"
          echo "Branch: ${GITHUB_REF##*/}" >> "$OUTPUT_FILE"
          echo "Commit: ${GITHUB_SHA}" >> "$OUTPUT_FILE"
          echo "------------------------------------" >> "$OUTPUT_FILE"
          echo "" >> "$OUTPUT_FILE"

          exclude_ext_pattern=$(echo "$EXCLUDE_EXTENSIONS" | sed 's/,/|/g')
          # Also exclude the output file itself
          exclude_files_pattern="$OUTPUT_FILE|$(echo "$EXCLUDE_FILES" | sed 's/,/|/g')"

          git ls-files | \
          grep -vE "\.($exclude_ext_pattern)$" | \
          grep -vE "^($exclude_files_pattern)$" | \
          while IFS= read -r file; do
              echo "--- START OF FILE: $file ---" >> "$OUTPUT_FILE"
              cat "$file" >> "$OUTPUT_FILE"
              echo -e "\n--- END OF FILE: $file ---\n" >> "$OUTPUT_FILE"
          done

          echo "âœ… Repository flattened into $OUTPUT_FILE"

      - name: Commit and push flattened file
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add $OUTPUT_FILE
          # Check if there are changes to commit to avoid empty commits
          if git diff --staged --quiet; then
            echo "No changes to commit. The flattened file is already up-to-date."
          else
            git commit -m "docs: Add/update flattened repository file" -m "This commit was generated by a GitHub Action."
            git push
          fi
        env:
          OUTPUT_FILE: "flattened_output.txt"

      - name: Upload artifact for easy download
        uses: actions/upload-artifact@v4
        with:
          name: flattened-repository-file
          path: flattened_output.txt
          if-no-files-found: error
